# Use Case

UML
	Unified Modeling Language
	표준화된 범용 모델링 언어
	
	제작하는 프로그램을 도식적(그림화)으로 표현해서
	좀더 빠르게 전체 흐름을 이해할 수 있도록 도와주는 것.
	
종류
	
	1. UseCase Diagram
		==> 행위자(사용자) 측면에서 필요한 기능을 도식적으로 표현한 것.
		
		1) 액터	: 해당 프로그램을 사용하는 사용자를 도식적으로 만든 것
					프로그램을 사용하는 사용자의 종류를 
					될 수 있으면 정확하게 표현해야 한다.
					
					결론적으로
						액터를 보면 만들어야 하는 프로그램의
						권한이나 프로그램의 종류를 분석할 수 있어야 한다.
		
		2) 유스케이스	: 사용할 수 있는 기능을 도식적으로 만든 것
							될 수 있으면 자세하게 기능을 풀어서 표현하는 것이 좋다.
		
		3) 일반화 작업	: 순차적으로 처리하는 것
					
					예 ]
						게시판 목록보기와 게시판 상세보기는
						목록보기 다음 순서로 상세보기가 된다.
		
		4) include 작업		: 특정 작업을 실행할 때 반드시 포함 되어야 하는 작업을 표시하는 것.
					
					예 ]
						회원가입의 경우 반드시 아이디 중복 검사를 거쳐야 하는 경우에
						아이디 중복검사는 
						회원가입 기능에 include 기능으로 도식화 한다.
						
					주의 ]
						화살표 방향은 메인 기능에서 보조기능으로 나가는 방향
		
		5) extends 작업		: 특정 작업이 진행되는 도중에 다른 작업이 선택적으로
								확장되어짐을 표시하는 것.
								
					주의 ]
						화살표의 방향은 include 작업의 반대로
						선택적 요소에서 메인 요소로 들어가는 방향
		
	참고 ]
		UseCase는 도식적으로 사용자(액터)가 사용할 수 있는 기능에 대해서 나열할 것이다.
		그런데 이 다이어그램만 가지고는 개발자 입장에서 어떻게 구현해야 하는지
		구체적인 내용을 알 수 없다.
		
		예 ]
			로그인 기능은 
			언제 / 어떻게 실행해야 하며
			id, 비밀번호은 어떤 형식으로 정규화 과정을 거쳐야 하는지...
			그리고 로그인에 성공 또는 실패한 경우는 어떻게 처리해야 하는지에
			대해서는 구체적으로 알 수 없다.
			
			이런 경우를 대비해서 
			UseCase는 반드시 UseCase 명세서를 같이 만들어 줘야 한다.
			
유스케이스 명세서 작성 방법
==> 이것은 하나의 외부 문서로 어떤 형식(프로그램)으로 만들어도 상관 없다.
	(특정 문서 포맷이 있는 것은 아니다.
		다만 다음 내용들이 반드시 포함 되어야 한다.
	)
			
	1) 유스케이스 제목
		==> 현재 유스케이스의 제목
			작업하는 전체 유스케이스의 제목이 아닌 하나의 유스케이스
			
	2) 개요
		==> 해당 유스케이스의 전체적인 기능 설명
		
	3) 관련 액터
		==> 해당 유스케이스를 사용하는 사용자 종류를 의미
		
	4) 기본 흐름
		==> 가장 기본적인 작업의 흐름을 명시 하는 것.
		
	5) 대체 흐름
		==> 기본 흐름에 문제가 발생한 경우 
			보조적으로 처리할 작업의 흐름을 명시하는 것
			(정상적으로 작업하기 위한 보조 흐름)
			
	6) 예외 흐름
		==> 기본 흐름에 문제 발생한 경우
			보조적으로 처리할 작업의 흐름을 명시하는 것
			(정상적으로 작업이 진행되지 못할 경우 처리할 보조 흐름)
			
	7) 확장점
		==> 해당 기능을 수행하지 못할 경우를 대비해서
			대신처리할 기능을 나열해 주는 것
	
	8) 특이사항
		==> 기타 설명들...
	
	--------------------------------------------------------------------------------------------------
	2. Class Diagram
	3. Sequence Diagram
	
	4. Collaboration Diagram
	5. Statechart Diagram
	6. Activity Diagram
	7. Deployment Diagram
	8. Component Diagram